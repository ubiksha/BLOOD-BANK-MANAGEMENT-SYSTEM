package BB;

import java.awt.EventQueue;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.awt.Font;
import javax.swing.JSeparator;
import javax.swing.JTextField;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.JScrollPane;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.awt.event.ActionEvent;
import javax.swing.ImageIcon;

public class searchdonorlocation extends JFrame {

    private static final long serialVersionUID = 1L;
    private JPanel contentPane;
    private JTextField textField;
    private JTable table_1;

    /**
     * Launch the application.
     */
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    searchdonorlocation frame = new searchdonorlocation();
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    /**
     * Create the frame.
     */
    public searchdonorlocation() {
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 883, 483);
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

        setContentPane(contentPane);
        contentPane.setLayout(null);

        JLabel lblNewLabel = new JLabel("Search Blood Donor(address)");
        lblNewLabel.setBounds(261, 10, 404, 33);
        lblNewLabel.setFont(new Font("Tahoma", Font.BOLD | Font.ITALIC, 24));
        contentPane.add(lblNewLabel);

        JSeparator separator = new JSeparator();
        separator.setBounds(0, 53, 869, 27);
        contentPane.add(separator);

        JLabel lblNewLabel_1 = new JLabel("Address");
        lblNewLabel_1.setBounds(132, 70, 121, 27);
        lblNewLabel_1.setFont(new Font("Tahoma", Font.BOLD | Font.ITALIC, 21));
        contentPane.add(lblNewLabel_1);

        textField = new JTextField();
        textField.setBounds(322, 78, 254, 19);
        contentPane.add(textField);
        textField.setColumns(10);

        JSeparator separator_1 = new JSeparator();
        separator_1.setBounds(0, 107, 869, 15);
        contentPane.add(separator_1);

        JScrollPane scrollPane = new JScrollPane();
        scrollPane.setBounds(50, 127, 745, 235);
        contentPane.add(scrollPane);

        table_1 = new JTable();
        scrollPane.setViewportView(table_1);
        table_1.setModel(new DefaultTableModel(
            new Object[][] {},
            new String[] {
                "donarId", "name", "fatherName", "motherName", "DOB", "mobileNo", "gender", "email", "bloodgroup"
            }
        ));

        JButton btnPrint = new JButton("Print");
        btnPrint.setBounds(97, 404, 85, 21);
        btnPrint.setFont(new Font("Tahoma", Font.BOLD, 18));
        btnPrint.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String address = textField.getText();
                if (address.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please enter an address");
                    return;
                }

                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bloodbank", "root", "Subiksha@999");
                    String sql = "SELECT * FROM donar WHERE address = ?";
                    PreparedStatement pts = con.prepareStatement(sql);
                    pts.setString(1, address);
                    ResultSet rs = pts.executeQuery();
                    DefaultTableModel dt = (DefaultTableModel) table_1.getModel();
                    dt.setRowCount(0);
                    while (rs.next()) {
                        Object[] o = {
                            rs.getString("donarId"), rs.getString("name"), rs.getString("fatherName"),
                            rs.getString("motherName"), rs.getString("DOB"), rs.getString("mobileNo"),
                            rs.getString("gender"), rs.getString("email"), rs.getString("bloodgroup")
                        };
                        dt.addRow(o);
                    }
                    rs.close();
                    pts.close();
                    con.close();
                } catch (Exception ec) {
                    JOptionPane.showMessageDialog(null, "An error occurred while fetching the data");
                    ec.printStackTrace();
                }
            }
        });
        Homepage nextFrame = new Homepage();
        nextFrame.setVisible(true);
        contentPane.add(btnPrint);

        JButton btnNewButton = new JButton("Close");
        btnNewButton.setBounds(553, 404, 85, 21);
        btnNewButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                setVisible(false);
            }
        });
        btnNewButton.setFont(new Font("Tahoma", Font.BOLD, 18));
        contentPane.add(btnNewButton);
        
        JLabel lblNewLabel_2 = new JLabel("New label");
        lblNewLabel_2.setIcon(new ImageIcon("C:\\Users\\Subiksha Senthil\\Pictures\\donor images.png"));
        lblNewLabel_2.setBounds(0, 0, 869, 446);
        contentPane.add(lblNewLabel_2);
    }
}
