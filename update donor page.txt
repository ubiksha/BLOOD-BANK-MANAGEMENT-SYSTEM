package BB;
import java.sql.*;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.text.JTextComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.awt.event.ActionEvent;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import java.awt.Toolkit;

public class front extends JFrame {

	private static final long serialVersionUID = 1L;
	protected static final String UPDATE = null;
	private JPanel contentPane;
	private JTextField textField;
	private JTextField textField_1;
	private JTextField textField_2;
	private JTextField textField_3;
	private JTextField textField_4;
	private JTextField textField_5;
	private JTextField textField_6;
	private JTextField textField_8;
	private JComboBox comboBox_3; 
	private Connection con;
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					front frame = new front();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public front() {
		setIconImage(Toolkit.getDefaultToolkit().getImage("C:\\Users\\Subiksha Senthil\\Pictures\\donord.jpeg"));
		JFrame frame = new JFrame();
		con = connector.getCon();

		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 1176, 685);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("UPDATE DONOR DETAILS");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD | Font.ITALIC, 29));
		lblNewLabel.setBounds(370, 36, 598, 28);
		contentPane.add(lblNewLabel);
		
		JLabel lblNewLabel_1 = new JLabel("DONAR ID:");
		lblNewLabel_1.setFont(new Font("Tahoma", Font.BOLD, 24));
		lblNewLabel_1.setToolTipText("DONAR ID");
		lblNewLabel_1.setBounds(409, 114, 147, 28);
		contentPane.add(lblNewLabel_1);
		
		textField = new JTextField();
		textField.setFont(new Font("Tahoma", Font.BOLD, 20));
		textField.setBounds(562, 123, 50, 19);
		contentPane.add(textField);
		textField.setColumns(10);
		
		JButton btnNewButton = new JButton("SEARCH");
		btnNewButton.addActionListener(new ActionListener() {
			//private JLabel textField;
			//private JLabel textField_1;
			//private JLabel textField_2;
			//private JLabel textField_3;
			//private JLabel textField_4;
			//private JLabel textField_5;
			//private JLabel textField_6;
			//private JLabel textField_8;
			//private JLabel comboBox;
			
			public void actionPerformed(ActionEvent e) {
				 String donorId = textField.getText(); // Correctly fetching the donor ID
	                try {
	                    Connection con = connector.getCon(); // Ensure your connection method is defined
	                    Statement st = con.createStatement();
	                    ResultSet rs = st.executeQuery("SELECT * FROM donar WHERE donarId = '" + donorId + "'");

	                    if (rs.next()) {
	                        textField_1.setText(rs.getString(2)); // Full name
	                        textField_2.setText(rs.getString(3)); // Father's name
	                        textField_3.setText(rs.getString(4)); // Mother's name
	                        textField_4.setText(rs.getString(5)); // Date of birth
	                        textField_5.setText(rs.getString(6)); // Mobile number
	                        textField_6.setText(rs.getString(8)); // Email
	                        textField_8.setText(rs.getString(11)); // Address
	                    } else {
	                        JOptionPane.showMessageDialog(null, "Donor ID does not exist");
	                    }
	                } catch (SQLException e1) {
	                    e1.printStackTrace();
	                }
	            }
		});
		Homepage nextFrame = new Homepage();
        nextFrame.setVisible(true);
		btnNewButton.setFont(new Font("Tahoma", Font.BOLD, 23));
		btnNewButton.setBounds(721, 111, 147, 37);
		contentPane.add(btnNewButton);
		
		JLabel lblNewLabel_2 = new JLabel("Full Name");
		lblNewLabel_2.setFont(new Font("Tahoma", Font.BOLD, 20));
		lblNewLabel_2.setBounds(64, 194, 107, 28);
		contentPane.add(lblNewLabel_2);
		
		JLabel lblNewLabel_3 = new JLabel("Father Name");
		lblNewLabel_3.setFont(new Font("Tahoma", Font.BOLD, 20));
		lblNewLabel_3.setBounds(64, 252, 130, 28);
		contentPane.add(lblNewLabel_3);
		
		JLabel lblNewLabel_4 = new JLabel("Mother Name");
		lblNewLabel_4.setFont(new Font("Tahoma", Font.BOLD, 20));
		lblNewLabel_4.setBounds(64, 301, 160, 37);
		contentPane.add(lblNewLabel_4);
		
		JLabel lblNewLabel_5 = new JLabel("Date of Birth");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 20));
		lblNewLabel_5.setBounds(64, 356, 147, 28);
		contentPane.add(lblNewLabel_5);
		
		JLabel lblNewLabel_6 = new JLabel("Mobile No");
		lblNewLabel_6.setFont(new Font("Tahoma", Font.BOLD, 20));
		lblNewLabel_6.setBounds(64, 415, 130, 19);
		contentPane.add(lblNewLabel_6);
		
		JLabel lblNewLabel_7 = new JLabel("Gender");
		lblNewLabel_7.setFont(new Font("Tahoma", Font.BOLD, 20));
		lblNewLabel_7.setBounds(64, 463, 92, 28);
		contentPane.add(lblNewLabel_7);
		
		textField_1 = new JTextField();
		textField_1.setBounds(241, 203, 182, 19);
		contentPane.add(textField_1);
		textField_1.setColumns(10);
		
		textField_2 = new JTextField();
		textField_2.setBounds(241, 261, 182, 19);
		contentPane.add(textField_2);
		textField_2.setColumns(10);
		
		textField_3 = new JTextField();
		textField_3.setBounds(241, 314, 182, 19);
		contentPane.add(textField_3);
		textField_3.setColumns(10);
		
		textField_4 = new JTextField();
		textField_4.setBounds(241, 365, 182, 19);
		contentPane.add(textField_4);
		textField_4.setColumns(10);
		
		textField_5 = new JTextField();
		textField_5.setBounds(241, 419, 182, 19);
		contentPane.add(textField_5);
		textField_5.setColumns(10);
		
		final JComboBox comboBox = new JComboBox();
		comboBox.setFont(new Font("Tahoma", Font.BOLD, 20));
		comboBox.setModel(new DefaultComboBoxModel(new String[] {"Male", "Female", "Other"}));
		comboBox.setBounds(241, 471, 147, 21);
		contentPane.add(comboBox);
		
		JLabel lblNewLabel_8 = new JLabel("Email");
		lblNewLabel_8.setFont(new Font("Tahoma", Font.BOLD, 20));
		lblNewLabel_8.setBounds(616, 200, 70, 19);
		contentPane.add(lblNewLabel_8);
		
		JLabel lblNewLabel_9 = new JLabel("Blood Group");
		lblNewLabel_9.setFont(new Font("Tahoma", Font.BOLD, 20));
		lblNewLabel_9.setBounds(616, 252, 124, 28);
		contentPane.add(lblNewLabel_9);
		
		JLabel lblNewLabel_10 = new JLabel("City");
		lblNewLabel_10.setFont(new Font("Tahoma", Font.BOLD, 20));
		lblNewLabel_10.setBounds(616, 301, 70, 29);
		contentPane.add(lblNewLabel_10);
		
		JLabel lblNewLabel_11 = new JLabel("Complete Address");
		lblNewLabel_11.setFont(new Font("Tahoma", Font.BOLD, 20));
		lblNewLabel_11.setBounds(614, 356, 188, 28);
		contentPane.add(lblNewLabel_11);
		
		textField_6 = new JTextField();
		textField_6.setBounds(810, 203, 327, 19);
		contentPane.add(textField_6);
		textField_6.setColumns(10);
		
		final JComboBox comboBox_1 = new JComboBox();
		comboBox_1.setFont(new Font("Tahoma", Font.BOLD, 20));
		comboBox_1.setModel(new DefaultComboBoxModel(new String[] {"A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-"}));
		comboBox_1.setBounds(810, 256, 100, 21);
		contentPane.add(comboBox_1);
		
		textField_8 = new JTextField();
		textField_8.setBounds(814, 365, 298, 126);
		contentPane.add(textField_8);
		textField_8.setColumns(10);
		
		JButton btnNewButton_1 = new JButton("UPDATE");
        btnNewButton_1.addActionListener(new ActionListener() {
           

			public void actionPerformed(ActionEvent e) {
                String donarId = textField.getText();
                String name = textField_1.getText();
                String fatherName = textField_2.getText();
                String motherName = textField_3.getText();
                String DOB = textField_4.getText(); // Assuming this is a valid date string
                String mobileNo = textField_5.getText();
                String gender = (String) comboBox.getSelectedItem();
                String email = textField_6.getText();
                String bloodGroup = (String) comboBox_1.getSelectedItem();
				String city = (String) comboBox_3.getSelectedItem(); // Retrieve selected city
                String address = textField_8.getText();

                try {
                    Connection con = connector.getCon(); // Ensure your connection method is defined
                    String query = "UPDATE donar " +
                            "SET name = ?, fatherName = ?, motherName = ?, DOB = ?, mobileNo = ?, gender = ?, email = ?, bloodGroup = ?, city = ?, address = ? " +
                            "WHERE donarId = ?";
                    PreparedStatement pst = con.prepareStatement(query);
                    pst.setString(1, name);
                    pst.setString(2, fatherName);
                    pst.setString(3, motherName);
                    pst.setString(4, DOB);
                    pst.setString(5, mobileNo);
                    pst.setString(6, gender);
                    pst.setString(7, email);
                    pst.setString(8, bloodGroup);
                    pst.setString(9, city);
                    pst.setString(10, address);
                    pst.setString(11, donarId); // Set donarId as the last parameter

                    int rowsUpdated = pst.executeUpdate();
                    if (rowsUpdated > 0) {
                        JOptionPane.showMessageDialog(null, "Updated successfully!");
                    } else {
                        JOptionPane.showMessageDialog(null, "Failed to update donor!");
                    }
                    pst.close();

                } catch (SQLException e1) {
                    e1.printStackTrace();
                    JOptionPane.showMessageDialog(null, "SQL error occurred.");
                }
            }
        });

		
	 



		btnNewButton_1.setFont(new Font("Tahoma", Font.BOLD, 20));
		btnNewButton_1.setBounds(207, 550, 124, 21);
		contentPane.add(btnNewButton_1);
		
		JButton btnNewButton_2 = new JButton("RESET");
		btnNewButton_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				setVisible(false);
                new front().setVisible(true);
			}
		});
		btnNewButton_2.setFont(new Font("Tahoma", Font.BOLD, 20));
		btnNewButton_2.setBounds(471, 554, 107, 21);
		contentPane.add(btnNewButton_2);
		
		JButton btnNewButton_3 = new JButton("CLOSE");
		btnNewButton_3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				setVisible(false);
			}
		});
		btnNewButton_3.setFont(new Font("Tahoma", Font.BOLD, 20));
		btnNewButton_3.setBounds(697, 554, 105, 21);
		contentPane.add(btnNewButton_3);
		
		comboBox_3 = new JComboBox();
		comboBox_3.setFont(new Font("Tahoma", Font.BOLD, 24));
		comboBox_3.setModel(new DefaultComboBoxModel(new String[] {"salem", "kallakurichi"}));
		comboBox_3.setBounds(801, 313, 147, 25);
		contentPane.add(comboBox_3);
		
		JLabel lblNewLabel_12 = new JLabel("New label");
		lblNewLabel_12.setIcon(new ImageIcon("C:\\Users\\Subiksha Senthil\\Pictures\\donor images.png"));
		lblNewLabel_12.setBounds(0, -1, 1162, 648);
		contentPane.add(lblNewLabel_12);
	}
}
